/*
1051 复数乘法 （15 分）
复数可以写成 (A+Bi) 的常规形式，其中 A 是实部，B 是虚部，i 是虚数单位，满足 i^2=−1；也可以写成极坐标下的指数形式 (R×e^(Pi))，
其中 R 是复数模，P 是辐角，i 是虚数单位，其等价于三角形式 (R(cos(P)+isin(P))。
现给定两个复数的 R 和 P，要求输出两数乘积的常规形式。
输入格式：
输入在一行中依次给出两个复数的 R1, P1, R2, P2，数字间以空格分隔。
输出格式：
在一行中按照 A+Bi 的格式输出两数乘积的常规形式，实部和虚部均保留 2 位小数。注意：如果 B 是负数，则应该写成 A-|B|i 的形式。
输入样例：
2.3 3.5 5.2 0.4
输出样例：
-8.68-8.23i
*/

#include<stdio.h>
#include<math.h>
#define EPSILON 0.01
double ar,ap,bp,br,cr,cp;
int main()
{
	scanf("%lf",&ar);
	scanf("%lf",&ap);
	scanf("%lf",&br);
	scanf("%lf",&bp);
	
	cr=ar*br;
	cp=ap+bp;
	
	double c_Re=cr*cos(cp);
	double c_Ai=cr*sin(cp);
	
	//注意：由于实部、虚部都保留两位小数，所以当A、B的值介于0与-0.01之间时就必须要把它们设置为零，
	//否则会有用例无法通过。
	//原文：https://blog.csdn.net/chr1991/article/details/51014382
	 if(fabs(c_Re) < EPSILON)
	 {
     c_Re = 0;
   }

  if(fabs(c_Ai) < EPSILON)
  {
       c_Ai = 0;
  }
	
  if(c_Ai>=0)
  	{
  	  	printf("%.2f+%.2fi",c_Re,c_Ai);
  	}
	  else
	  {
	    printf("%.2f%.2fi",c_Re,c_Ai);
  	}
	
	return 0;
}
